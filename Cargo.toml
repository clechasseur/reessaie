[package]
name = "reessaie"
version = "1.0.1"
authors = [ "Charles Lechasseur <shiftingbeard@outlook.com>" ]
edition = "2024"
rust-version = "1.88.0"

readme = "README.md"
license = "MIT"

homepage = "https://github.com/clechasseur/reessaie#readme"
repository = "https://github.com/clechasseur/reessaie"
documentation = "https://docs.rs/reessaie/"

description = "Companion to reqwest_retry to use the Retry-After HTTP header if available"

keywords = [ "http", "middleware", "retry", "reqwest" ]
categories = [ "web-programming::http-client" ]

include = [ "src/**/*", "tests/**/*", "LICENSE", "README.md" ]

[package.metadata.docs.rs]
all-features = true
targets = [ "x86_64-unknown-linux-gnu" ]
rustc-args = [ "--cfg", "docsrs" ]

[lints.rust.unexpected_cfgs]
level = "warn"
check-cfg = [ "cfg(tarpaulin)", "cfg(tarpaulin_include)", "cfg(coverage)", "cfg(coverage_nightly)" ]

[dependencies]
async-trait = "0.1.89"
chrono = "0.4.42"
http = "1.3.1"
reqwest = "0.12.23"
# This version requirement for `reqwest-middleware` is the same as the one used by `reqwest-retry` (more or less).
reqwest-middleware = ">=0.3.3, <0.5.0"
reqwest-retry = "0.7.0"
tokio = { version = "1.47.1", features = ["rt"] }
tracing = "0.1.41"

[dev-dependencies]
anyhow = "1.0.100"
assert_matches = "1.5.0"
mock_instant = "0.6.0"
rstest = "0.26.1"
tokio = { version = "1.47.1", features = ["macros"] }
tracing-test = "0.2.5"
wiremock = "0.6.5"
